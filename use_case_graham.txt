{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\froman\fcharset0 Times-Roman;}
{\colortbl;\red255\green255\blue255;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid1}
{\list\listtemplateid2\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid101\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid2}
{\list\listtemplateid3\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid201\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid3}
{\list\listtemplateid4\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid301\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid4}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}{\listoverride\listid3\listoverridecount0\ls3}{\listoverride\listid4\listoverridecount0\ls4}}
\margl1440\margr1440\vieww19820\viewh13320\viewkind0
\deftab720
\pard\tx720\pardeftab720

\f0\i\fs24 \cf0 \
GRAHAM BAKER\
\
By what I saw on Scratch and snap, It seems like methods are created by putting smaller pieces together, and then all at once the actions were competed. So I made creating a new action to put the action on the board, connect actions, to put them together, save a method, to save a series of actions, and delete a method, to delete a series of actions\
\
\pard\tx220\tx720\pardeftab720\li720\fi-720
\ls1\ilvl0\cf0 {\listtext	\'95	}Name:
\i0  Creating a new action\
\ls1\ilvl0
\i {\listtext	\'95	}Actor(s):
\i0  The "programmer" or user\
\ls1\ilvl0
\i {\listtext	\'95	}Preconditions/Assumptions:
\i0  none \
\ls1\ilvl0
\i {\listtext	\'95	}Flow of Events:
\i0  The user selects the new method button, drags the method into the workbox, then the method prompts the user to give arguments for that specific action, checks if input is acceptable, if it is, the method is created. \
\ls1\ilvl0
\i {\listtext	\'95	}Alternatives:
\i0  If the input is not acceptable, than the user is promoted to do it again
\i . 
\i0 \
\ls1\ilvl0
\i {\listtext	\'95	}Postconditions:
\i0  If first method, the box is made, if attaching to another method, the boxes are connected\
\pard\tx720\pardeftab720

\i \cf0 \
\pard\tx220\tx720\pardeftab720\li720\fi-720
\ls2\ilvl0\cf0 {\listtext	\'95	}Name:
\i0  Connecting actions\
\ls2\ilvl0
\i {\listtext	\'95	}Actor(s):
\i0  The "programmer" or user\
\ls2\ilvl0
\i {\listtext	\'95	}Preconditions/Assumptions:
\i0  there are two actions on the development board.  \
\ls2\ilvl0
\i {\listtext	\'95	}Flow of Events:
\i0  The action is selected by the user, dragged above or below the action they want to connect to, and is released.\
\ls2\ilvl0
\i {\listtext	\'95	}Alternatives:
\i0  If the user misses the action while dropping another one on it or the user drops the action in a place out of the frames range, the action will be returned to where it got picked up from. \
\ls2\ilvl0
\i {\listtext	\'95	}Postconditions:
\i0  The methods are connected\
\pard\tx720\pardeftab720
\cf0 \
\pard\tx220\tx720\pardeftab720\li720\fi-720
\ls3\ilvl0
\i \cf0 {\listtext	\'95	}Name:
\i0  Save a collection of methods\
\ls3\ilvl0
\i {\listtext	\'95	}Flow of Events:
\i0  The user selects the method or the set of actions that they want to save, the collection of actions gets highlighted, then they click the save button. this adds the collection of actions to a list that the user can access, then it will ask for the method to be named. \
\ls3\ilvl0
\i {\listtext	\'95	}Alternatives:
\i0  If the user selects the set of actions, and then clicks somewhere other than the save button, the set of actions becomes deselected\
\ls3\ilvl0
\i {\listtext	\'95	}Postconditions:
\i0  The collection of methods is saved \
\pard\tx720\pardeftab720
\cf0 \
\pard\tx220\tx720\pardeftab720\li720\fi-720
\ls4\ilvl0
\i \cf0 {\listtext	\'95	}Name:
\i0  Delete a method.\
\pard\tx220\tx720\pardeftab720\li720\fi-720
\ls4\ilvl0
\i \cf0 {\listtext	\'95	}Actor(s):
\i0  The "programmer" or user\
\ls4\ilvl0
\i {\listtext	\'95	}Preconditions/Assumptions:
\i0  there is something to delete \
\pard\tx220\tx720\pardeftab720\li720\fi-720
\ls4\ilvl0
\i \cf0 {\listtext	\'95	}Flow of Events:
\i0  select the group of actions in the method and drag and drop into the trash can\
\ls4\ilvl0
\i {\listtext	\'95	}Alternatives:
\i0  Details and events that may deviate from the main flow of events. Most commonly will be what happens when something "goes wrong" or otherwise doesn't work exactly as expected.\
\ls4\ilvl0
\i {\listtext	\'95	}Postconditions:
\i0  If appropriate, any details about the state of the system at the end of the use case.\
\pard\tx720\pardeftab720
\cf0 \
\
\
}